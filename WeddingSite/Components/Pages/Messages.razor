@page "/Messaggi"

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using WeddingSite.Data
@inject ApplicationDbContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject IJSRuntime JSRuntime

<PageTitle>Messaggi - Lascia un messaggio agli sposi</PageTitle>

<h1>💌 Wedding Messages</h1>
<p>Share your wishes and congratulations with Vanessa & Simone!</p>

<AuthorizeView Context="authContext">
    <Authorized>
        <div class="card mb-4">
            <div class="card-header">
                <h5>Leave a Message</h5>
            </div>
            <div class="card-body">
                <EditForm Model="@newMessage" OnValidSubmit="@AddMessage" FormName="MessageForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label class="form-label">Message</label>
                        <InputTextArea @bind-Value="newMessage.Message" class="form-control" rows="4" />
                    </div>

                    <button type="submit" class="btn btn-primary">Post Message</button>
                </EditForm>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-info">
            <p>Please <a href="Account/Login">login</a> or <a href="Account/Register">register</a> to leave a message.</p>
        </div>
    </NotAuthorized>
</AuthorizeView>

<div class="row">
    @foreach (var message in messages)
    {
        <div class="col-md-6 mb-3">
            <div class="card">
                <div class="card-body">
                    <h6 class="card-subtitle mb-2 text-muted">@message.AuthorName</h6>
                    <p class="card-text">@message.Message</p>
                    <small class="text-muted">@message.CreatedAt.ToString("MMM dd, yyyy")</small>
                </div>
            </div>
        </div>
    }
</div>

@if (!messages.Any())
{
    <div class="text-center">
        <p>No messages yet. Be the first to leave a message!</p>
    </div>
}

@code {
    private List<WeddingMessage> messages = new();

    [SupplyParameterFromForm]
    private WeddingMessage newMessage { get; set; } = new();

    protected override void OnInitialized()
    {
        LoadMessages();
    }

    private void LoadMessages()
    {
        messages = DbContext.WeddingMessages
            .OrderByDescending(m => m.CreatedAt)
            .ToList();
    }


    private async Task AddMessage()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            var user = await UserManager.GetUserAsync(authState.User);
            if (user != null)
            {
                var message = new WeddingMessage
                {
                    AuthorName = user.UserName ?? user.Email ?? "NA",
                    Message = newMessage.Message,
                    CreatedAt = DateTime.Now,
                    UserId = user.Id
                };

                DbContext.WeddingMessages.Add(message);
                await DbContext.SaveChangesAsync();

                newMessage = new WeddingMessage();
                LoadMessages();
                StateHasChanged();
            }
        }
    }
}
